{% schema %}
{
  "name": "Carrossel Tilt",
  "settings": [
    {
      "type": "header",
      "content": "Card 1"
    },
    {
      "type": "image_picker",
      "id": "img1",
      "label": "Imagem do Card 1"
    },
    {
      "type": "text",
      "id": "title1",
      "label": "Título Card 1",
      "default": "Camisa Seleção 1"
    },
    {
      "type": "url",
      "id": "link1",
      "label": "Link Card 1"
    },
    {
      "type": "header",
      "content": "Card 2"
    },
    {
      "type": "image_picker",
      "id": "img2",
      "label": "Imagem do Card 2"
    },
    {
      "type": "text",
      "id": "title2",
      "label": "Título Card 2",
      "default": "Camisa Seleção 2"
    },
    {
      "type": "url",
      "id": "link2",
      "label": "Link Card 2"
    },
    {
      "type": "header",
      "content": "Card 3"
    },
    {
      "type": "image_picker",
      "id": "img3",
      "label": "Imagem do Card 3"
    },
    {
      "type": "text",
      "id": "title3",
      "label": "Título Card 3",
      "default": "Camisa Seleção 3"
    },
    {
      "type": "url",
      "id": "link3",
      "label": "Link Card 3"
    }
  ],
  "presets": [
    {
      "name": "Carrossel Tilt",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<section class="tilt-carousel">
  <div class="carousel-background" id="carouselBg"></div>

  <div class="carousel-wrapper" id="carousel">
    {% for i in (1..3) %}
      {% capture img_key %}img{{ i }}{% endcapture %}
      {% capture title_key %}title{{ i }}{% endcapture %}
      {% capture link_key %}link{{ i }}{% endcapture %}

      {% assign img = section.settings[img_key] %}
      {% assign title = section.settings[title_key] %}
      {% assign link = section.settings[link_key] %}

      <div class="card" data-tilt data-tilt-max="10" data-tilt-speed="400" data-bg="{{ img | image_url: width: 2000 }}">
        <div class="card-glass">
          {% if img %}
            <img src="{{ img | image_url: width: 600 }}" alt="Camisa {{ i }}" class="shirt-img">
          {% endif %}
          <h2>{{ title }}</h2>
          <a href="{{ link }}" class="btn-card">Ver Produto</a>
        </div>
      </div>
    {% endfor %}
  </div>
</section>

<style>
.tilt-carousel {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  background: #000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.carousel-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center;
  transition: background-image 0.8s ease-in-out;
  z-index: 0;
}

.carousel-wrapper {
  position: relative;
  z-index: 2;
  display: flex;
  flex-direction: row;
  overflow-x: auto;
  gap: 2rem;
  padding: 2rem;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
}

.card {
  flex: 0 0 80%;
  scroll-snap-align: center;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 1.5rem;
  padding: 2rem;
  text-align: center;
  color: white;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease;
}

.card-glass {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.shirt-img {
  max-width: 100%;
  height: auto;
  object-fit: contain;
}

.btn-card {
  background: #8b5cf6;
  color: white;
  padding: 0.7rem 1.4rem;
  border-radius: 999px;
  font-weight: 600;
  text-decoration: none;
  transition: background 0.3s;
}

.btn-card:hover {
  background: #7c3aed;
}
</style>

<!-- Tilt.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/vanilla-tilt/1.7.2/vanilla-tilt.min.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const carousel = document.getElementById('carousel');
    const bg = document.getElementById('carouselBg');
    const cards = carousel.querySelectorAll('.card');

    const updateBg = (img) => {
      bg.style.backgroundImage = `url(${img})`;
    }

    const observeScroll = () => {
      let observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const card = entry.target;
            const img = card.dataset.bg;
            updateBg(img);
          }
        });
      }, {
        root: carousel,
        threshold: 0.5
      });

      cards.forEach(card => observer.observe(card));
    }

    observeScroll();
  });
</script>